{"version":3,"sources":["img/darkTheme.svg","img/lightTheme.svg","components/ThemeSlider.js","api.js","animation.js","util.js","components/Game.js","actions/detailAction.js","img/playstation.svg","img/steam.svg","img/xbox.svg","img/nintendo.svg","img/apple.svg","img/gamepad.svg","img/xboxx.svg","img/apple5.svg","img/empty.svg","img/full.svg","components/GameDetail.js","pages/Home.js","actions/gamesAction.js","img/logo.svg","components/Nav.js","components/GlobalStyles.js","App.js","reportWebVitals.js","reducers/gamesReducer.js","reducers/detailReducer.js","reducers/index.js","reducers/themeReducer.js","index.js"],"names":["Slider","styled","motion","div","ThemeSlider","dispatch","useDispatch","toggle","useSelector","state","theme","className","src","light","alt","type","onClick","document","body","style","background","color","dark","baseUrl","currentYear","Date","getFullYear","currentMonth","month","getMonth","getCurrentMonth","currentDay","day","getDay","getCurrentDay","currentDate","lastYear","nextYear","popularGames","process","upcomingGames","newgGames","gameScreenshotURL","gameId","searchGameURL","gameName","fadeIn","hidden","opacity","show","transition","duration","exit","popup","scale","smallImage","imagePath","size","match","replace","StyledGame","Game","name","released","image","id","variants","initial","animate","layoutId","toString","overflow","a","axios","get","detailData","screens","payload","game","data","loadDetails","to","h3","img","CardShadow","Detail","Stats","Info","Platforms","Media","Description","GameDetail","pathId","history","useHistory","details","isLoading","stars","rating","Math","floor","i","push","full","empty","getStars","e","element","target","console","log","classList","contains","map","star","display","width","height","margin","platforms","platform","xbox","steam","playstation","xboxx","playstation5","apple","nintendo","gamepad","background_image","textAlign","description_raw","results","screen","GameList","Games","Home","useEffect","popularData","upcomingData","newData","popular","upComing","newGames","games","searched","useLocation","pathname","split","AnimateSharedLayout","AnimatePresence","length","StyledNav","nav","Logo","Form","form","Nav","useState","inputGame","setInputGame","justifyContent","logo","value","onChange","placeholder","preventDefault","searchedGames","GlobalStyles","createGlobalStyle","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","initialState","detailReducer","action","rootReducer","combineReducers","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d4a2e505.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/darkTheme.98b4e129.svg\";","export default __webpack_public_path__ + \"static/media/lightTheme.a0ebcc6f.svg\";","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { motion } from 'framer-motion';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport dark from '../img/darkTheme.svg';\r\nimport light from '../img/lightTheme.svg';\r\n\r\nconst ThemeSlider = () => {\r\n  const dispatch = useDispatch();\r\n  const toggle = useSelector(state => state.theme);\r\n  //const [toggle, setToggle] = useState(true);\r\n  const sliderHandler = () => {\r\n    dispatch({ type: \"FETCH_TOGGLE\" })\r\n    if (toggle) {\r\n      document.body.style.background = \"#212121\";\r\n      document.body.style.color = \"white\";\r\n    }\r\n    else {\r\n      document.body.style.background = \"white\";\r\n      document.body.style.color = \"black\";\r\n    }\r\n\r\n  }\r\n  return (\r\n    <Slider>\r\n      <div className={toggle ? \"toggle\" : \"\"}>\r\n        <img src={light} alt=\"lightTheme\" />\r\n        <label className=\"switch\">\r\n          <input type=\"checkbox\" onClick={sliderHandler} />\r\n          <span className=\"slider round\"></span>\r\n        </label>\r\n        <img src={dark} alt=\"darkTheme\" />\r\n      </div>\r\n    </Slider >\r\n  )\r\n}\r\n\r\nconst Slider = styled(motion.div)`\r\ndiv{\r\n width: 100%;\r\n display: flex;\r\n align-items: center;\r\n padding: 2rem;\r\n}\r\n \r\n img{\r\n     width: 30px;\r\n     height: 30px;\r\n     margin: 0 0.5rem;\r\n }\r\n .toggle{\r\n   //background: red;\r\n }\r\n.switch {\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 60px;\r\n  height: 34px;\r\n}\r\n\r\n/* Hide default HTML checkbox */\r\n.switch input {\r\n  opacity: 0;\r\n  width: 0;\r\n  height: 0;\r\n}\r\n\r\n/* The slider */\r\n.slider {\r\n  position: absolute;\r\n  cursor: pointer;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: #FFBE00;\r\n  -webkit-transition: .4s;\r\n  transition: .4s;\r\n}\r\n\r\n.slider:before {\r\n  position: absolute;\r\n  content: \"\";\r\n  height: 26px;\r\n  width: 26px;\r\n  left: 4px;\r\n  bottom: 4px;\r\n  background-color: white;\r\n  -webkit-transition: .4s;\r\n  transition: .4s;\r\n}\r\n\r\ninput:checked + .slider {\r\n  background-color: #000;\r\n}\r\n\r\ninput:focus + .slider {\r\n  box-shadow: 0 0 1px #2196F3;\r\n}\r\n\r\ninput:checked + .slider:before {\r\n  -webkit-transform: translateX(26px);\r\n  -ms-transform: translateX(26px);\r\n  transform: translateX(26px);\r\n}\r\n\r\n/* Rounded sliders */\r\n.slider.round {\r\n  border-radius: 34px;\r\n}\r\n\r\n.slider.round:before {\r\n  border-radius: 50%;\r\n}\r\n\r\n\r\n`;\r\n\r\nexport default ThemeSlider;","// Base URL\r\n\r\nconst baseUrl = 'https://api.rawg.io/api/';\r\n\r\n// Getting the dates\r\nconst getCurrentMonth = () => {\r\n    const month = new Date().getMonth() + 1;\r\n    if (month < 10) return `0${month}`;\r\n    return month;\r\n}\r\nconst getCurrentDay = () => {\r\n    const day = new Date().getDay();\r\n    if (day < 10) return `0${day}`;\r\n    return day;\r\n}\r\n\r\nconst currentYear = new Date().getFullYear();\r\nconst currentMonth = getCurrentMonth();\r\nconst currentDay = getCurrentDay();\r\nconst currentDate = `${currentYear}-${currentMonth}-${currentDay}`;\r\nconst lastYear = `${currentYear - 1}-${currentMonth}-${currentDay}`;\r\nconst nextYear = `${currentYear + 1}-${currentMonth}-${currentDay}`;\r\n\r\n// Popular Gmaes\r\nconst popularGames = `games?key=${process.env.REACT_APP_RAWG_KEY}&dates=${lastYear},${currentDate}&ordering=-rating&page_size=12`;\r\nconst upcomingGames = `games?key=${process.env.REACT_APP_RAWG_KEY}&dates=${currentDate},${nextYear}&ordering=-added&page_size=12`;\r\nconst newgGames = `games?key=${process.env.REACT_APP_RAWG_KEY}&dates=${lastYear},${currentDate}&ordering=-released&page_size=12`;\r\n\r\n//https://api.rawg.io/api/games?key=da9bebdac31e429eaccfd7568a0db0d2\r\n\r\nexport const popularGamesURL = () => `${baseUrl}${popularGames}`;\r\nexport const upcomingGamesURL = () => `${baseUrl}${upcomingGames}`;\r\nexport const newGamesURL = () => `${baseUrl}${newgGames}`;\r\n\r\n// Game details\r\nexport const gameDetailsURL = (gameId) => `${baseUrl}games/${gameId}?key=${process.env.REACT_APP_RAWG_KEY}`;\r\n\r\n//ScreenShots\r\nexport const gameScreenshotURL = (gameId) => `${baseUrl}games/${gameId}/screenshots?key=${process.env.REACT_APP_RAWG_KEY}`;\r\n\r\n// Searched Game:\r\nexport const searchGameURL = (gameName) => `${baseUrl}games?key=${process.env.REACT_APP_RAWG_KEY}&search=${gameName}&page_size=9`;\r\n\r\n//console.log(searchGameURL())","export const fadeIn = {\r\n    hidden: {\r\n        opacity: 0,\r\n    },\r\n    show: {\r\n        opacity: 1,\r\n        transition: {\r\n            duration: 0.75,\r\n        },\r\n        exit: {\r\n            opacity: 0,\r\n            transition: { duration: 0.75 },\r\n        },\r\n    },\r\n};\r\n\r\nexport const popup = {\r\n    hidden: {\r\n        opacity: 0,\r\n        scale: 0.5,\r\n    },\r\n    show: {\r\n        opacity: 1,\r\n        scale: 1,\r\n        transition: {\r\n            duration: 0.75,\r\n        },\r\n        exit: {\r\n            opacity: 0,\r\n            transition: { duration: 0.75 },\r\n        },\r\n    },\r\n};","\r\n\r\nexport const smallImage = (imagePath, size) => {\r\n    const image = imagePath.match(/media\\/screenshots/) ? imagePath.replace(\"media/screenshots\", `media/resize/${size}/-/screenshots`) :\r\n        imagePath.replace(\"/media/games\", `/media/resize/${size}/-/games`);\r\n    return image || [];\r\n}","import React from 'react';\r\n// styling and animation:\r\nimport styled from 'styled-components';\r\nimport { motion } from \"framer-motion\";\r\nimport { Link } from 'react-router-dom';\r\nimport { popup } from '../animation';\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loadDetails } from '../actions/detailAction';\r\nimport { smallImage } from '../util';\r\n\r\n\r\nconst Game = ({ name, released, image, id }) => {\r\n    const toggle = useSelector(state => state.theme);\r\n    //load Details\r\n    const dispatch = useDispatch();\r\n    const loadDetailHandler = () => {\r\n        document.body.style.overflow = \"hidden\";\r\n        dispatch(loadDetails(id));\r\n    }\r\n    return (\r\n\r\n        <StyledGame variants={popup} initial=\"hidden\" animate=\"show\" layoutId={id.toString()} onClick={loadDetailHandler}>\r\n            <Link to={`/game/${id}`}>\r\n                <motion.h3 layoutId={`name ${id.toString()}`} className={!toggle ? \"toggle\" : \"\"}>{name}</motion.h3>\r\n                <p className={!toggle ? \"toggle\" : \"\"}>{released}</p>\r\n                {image && <motion.img layoutId={`image ${id.toString()}`} src={smallImage(image, 640)} alt={name} />}\r\n            </Link>\r\n        </StyledGame>\r\n\r\n    )\r\n}\r\n\r\nconst StyledGame = styled(motion.div)`\r\nmin-height: 30vh;\r\nbox-shadow: 0px 5px 30px rgba(0,0,0,0.2);\r\ntext-align: center;\r\nborder-radius: 1rem;\r\noverflow: hidden;\r\ncursor: pointer;\r\nimg{\r\n    width: 100%;\r\n    height: 40vh;\r\n    object-fit: cover;\r\n}\r\n\r\n.toggle{\r\n  color: white;\r\n  opacity: 0.8;\r\n}\r\n`;\r\n\r\nexport default Game;","import axios from 'axios';\r\nimport { gameDetailsURL, gameScreenshotURL } from \"../api\";\r\n\r\nexport const loadDetails = (id) => async (dispatch) => {\r\n\r\n    dispatch({\r\n        type: \"LOADING_DETAILS\"\r\n    });\r\n    const detailData = await axios.get(gameDetailsURL(id));\r\n    const screens = await axios.get(gameScreenshotURL(id));\r\n    //console.log(screens.data.results);\r\n\r\n    dispatch({\r\n        type: \"GET_DETAILS\",\r\n        payload: {\r\n            game: detailData.data,\r\n            screens: screens.data\r\n        }\r\n    });\r\n}","export default __webpack_public_path__ + \"static/media/playstation.18cc4b9c.svg\";","export default __webpack_public_path__ + \"static/media/steam.d7b8819f.svg\";","export default __webpack_public_path__ + \"static/media/xbox.3e7db735.svg\";","export default __webpack_public_path__ + \"static/media/nintendo.f579be04.svg\";","export default __webpack_public_path__ + \"static/media/apple.5757c37e.svg\";","export default __webpack_public_path__ + \"static/media/gamepad.c9269ef5.svg\";","export default __webpack_public_path__ + \"static/media/xboxx.e5244a13.svg\";","export default __webpack_public_path__ + \"static/media/apple5.94682cd2.svg\";","export default __webpack_public_path__ + \"static/media/empty.f15ae9c7.svg\";","export default __webpack_public_path__ + \"static/media/full.790f558e.svg\";","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { smallImage } from '../util';\r\n// styling and animation:\r\nimport styled from 'styled-components';\r\nimport { motion } from \"framer-motion\";\r\n//Redux\r\nimport { useSelector } from 'react-redux';\r\n//Platform Images\r\nimport playstation from \"../img/playstation.svg\";\r\nimport steam from \"../img/steam.svg\";\r\nimport xbox from \"../img/xbox.svg\";\r\nimport nintendo from \"../img/nintendo.svg\";\r\nimport apple from \"../img/apple.svg\";\r\nimport gamepad from \"../img/gamepad.svg\";\r\nimport xboxx from \"../img/xboxx.svg\";\r\nimport playstation5 from \"../img/apple5.svg\";\r\n//Star Images\r\nimport empty from \"../img/empty.svg\";\r\nimport full from \"../img/full.svg\";\r\n\r\n\r\n\r\nconst GameDetail = ({ pathId }) => {\r\n    const history = useHistory();\r\n    const exitDetailsHandler = (e) => {\r\n        const element = e.target;\r\n        console.log(\"Handler Clicked!\")\r\n        if (element.classList.contains(\"shadow\")) {\r\n            document.body.style.overflow = \"auto\";\r\n            history.push(\"/\");\r\n        }\r\n    }\r\n    //Get platform Images\r\n    const getPlatfromIcon = (name) => {\r\n        if (name === \"Xbox One\") return xbox;\r\n        if (name === \"PC\") return steam;\r\n        if (name === \"PlayStation 4\") return playstation;\r\n        if (name === \"Xbox Series S/X\") return xboxx;\r\n        if (name === \"PlayStation 5\") return playstation5;\r\n        if (name === \"iOS\") return apple;\r\n        if (name === \"Nintendo Switch\") return nintendo;\r\n        return gamepad;\r\n    }\r\n\r\n    // Get stars \r\n    const getStars = (rating) => {\r\n        let stars = []\r\n        rating = Math.floor(rating);\r\n        for (let i = 1; i <= 5; i++) {\r\n            if (i <= rating) {\r\n                stars.push(full);\r\n            } else {\r\n                stars.push(empty)\r\n            }\r\n        }\r\n        return stars;\r\n    }\r\n\r\n    //data\r\n    const { game, screens, isLoading } = useSelector((state) => state.details);\r\n    const toggle = useSelector(state => state.theme);\r\n    let stars = getStars(game.rating);\r\n    return (\r\n        <>\r\n            {!isLoading && (\r\n                <CardShadow className=\"shadow\" onClick={exitDetailsHandler}>\r\n                    <Detail>\r\n                        <motion.div layoutId={pathId} className={!toggle ? \"toggle\" : \"no-toggle\"}>\r\n                            <Stats>\r\n                                <div className=\"rating\">\r\n                                    <motion.h3 className={!toggle ? \"other_toggle\" : \"\"} layoutId={`name ${pathId}`}>{game.name}</motion.h3>\r\n                                    <p className={!toggle ? \"other_toggle\" : \"\"}>Rating: {game.rating}</p>\r\n                                    {stars.map((star, i) => {\r\n                                        return <img type=\"image/svg+xml\" src={star} style={{ display: \"inline\", width: \"30px\", height: \"30px\", margin: 0 }} key={i} alt={star} />\r\n                                    })}\r\n                                </div>\r\n                                <Info>\r\n                                    <h3 className={!toggle ? \"other_toggle\" : \"\"}>Platforms</h3>\r\n                                    <Platforms>\r\n                                        {game.platforms.map(data => {\r\n                                            //return <object type=\"image/svg+xml\" data={getPlatfromIcon(data.platform.name)}>hjhjh</object>\r\n                                            //return <svg width=\"100\" height=\"100\" xmlns={xbox}></svg>\r\n                                            return <img type=\"image/svg+xml\" src={getPlatfromIcon(data.platform.name)} style={{ width: \"50px\", height: \"50px\" }} key={data.platform.id} alt={data.platform.name} />\r\n                                        })}\r\n                                    </Platforms>\r\n                                </Info>\r\n                            </Stats>\r\n                            <Media>\r\n                                <motion.img layoutId={`image ${pathId}`} src={smallImage(game.background_image, 640)} alt=\"{background_image}\" />\r\n                            </Media>\r\n                            <Description>\r\n                                <p style={{ textAlign: \"justify\" }} className={!toggle ? \"other_toggle\" : \"\"}>{game.description_raw}</p>\r\n                            </Description>\r\n                            <div className=\"gallery\">\r\n                                {screens.results.map(screen => {\r\n                                    return <img key={screen.id} src={smallImage(screen.image, 640)} alt=\"game\" />\r\n                                })}\r\n                            </div>\r\n                        </motion.div>\r\n                    </Detail>\r\n                </CardShadow>\r\n            )}\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst CardShadow = styled(motion.div)`\r\n    width: 100%;\r\n    min-height: 100vh;\r\n    overflow-y:scroll;\r\n    background: rgba(0,0,0,0.7);\r\n    position: fixed;\r\n    top: 0;\r\n    left : 0;\r\n    z-index: 5;\r\n    &::-webkit-scrollbar{\r\n        width: 0.5rem;\r\n    }\r\n    &::-webkit-scrollbar-thumb{\r\n        background-color: #ff7676;\r\n    }\r\n    &::-webkit-scrollbar-track{\r\n        background: white;\r\n    }\r\n`;\r\n\r\nconst Detail = styled(motion.div)`\r\n    .no-toggle{\r\n        background: white;\r\n        color: black;\r\n        width: 80%;\r\n        border-radius: 1rem;\r\n        padding: 2rem 5rem;\r\n        position: absolute;\r\n        left: 10%;\r\n        //color: red;\r\n}\r\n\r\n.toggle{\r\n        width: 80%;\r\n        background: #181818;\r\n        //color: white;\r\n        border-radius: 1rem;\r\n        padding: 2rem 5rem;\r\n        position: absolute;\r\n        left: 10%;\r\n}\r\n    \r\n    img{\r\n        width: 100%;\r\n        //z-index: 10;\r\n        //display: block;\r\n    }\r\n    \r\n    .other_toggle{\r\n        color: white;\r\n        opacity: 0.8;\r\n    }\r\n    \r\n    \r\n`;\r\n\r\nconst Stats = styled(motion.div)`\r\n   display: flex;\r\n   align-items: center;\r\n   justify-content: space-between;\r\n\r\n`;\r\nconst Info = styled(motion.div)`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n`;\r\nconst Platforms = styled(motion.div)`\r\n   display: flex;\r\n   justify-content: space-between;\r\n   img{\r\n       margin-left: 3rem;\r\n   }\r\n`;\r\nconst Media = styled(motion.div)`\r\n  margin-top: 5rem;\r\n   justify-content: space-between;\r\n   img{\r\n       width: 100%;\r\n       //height: 60vh;\r\n      // object-fit: cover;\r\n   }\r\n`;\r\nconst Description = styled(motion.div)`\r\n    margin: 5rem 0;\r\n`;\r\n\r\n\r\nexport default GameDetail;","import React, { useEffect } from 'react';\r\nimport { useLocation } from 'react-router';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loadGames } from '../actions/gamesAction';\r\n// Components\r\nimport Game from '../components/Game';\r\nimport GameDetail from '../components/GameDetail';\r\n// styling and animation:\r\nimport styled from 'styled-components';\r\nimport { motion, AnimatePresence, AnimateSharedLayout } from \"framer-motion\";\r\nimport { fadeIn } from '../animation';\r\n\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(loadGames())\r\n    }, [dispatch]);\r\n    const { popular, newGames, upComing, searched } = useSelector(state => state.games);\r\n    const toggle = useSelector(state => state.theme);\r\n\r\n    const location = useLocation();\r\n    const pathId = location.pathname.split('/')[2];\r\n    //console.log(pathId);\r\n    return (\r\n        <GameList variants={fadeIn} initial=\"hidden\" animate=\"show\">\r\n            <AnimateSharedLayout type=\"crossfade\">\r\n                <AnimatePresence>\r\n                    {pathId && <GameDetail pathId={pathId} />}\r\n                </AnimatePresence>\r\n                {searched.length ?\r\n                    <>\r\n                        <h2 className={!toggle ? \"toggle\" : \"\"}>Searched Games</h2>\r\n                        <Games>\r\n                            {searched.map(game => {\r\n                                return (<Game key={game.id} name={game.name} released={game.released} image={game.background_image} id={game.id} />)\r\n                            })}\r\n                        </Games>\r\n                    </>\r\n                    : \"\"}\r\n                <h2 className={!toggle ? \"toggle\" : \"\"}>Upcoming Games</h2>\r\n                <Games>\r\n                    {upComing.map(game => {\r\n                        return (<Game key={game.id} name={game.name} released={game.released} image={game.background_image} id={game.id} />)\r\n                    })}\r\n                </Games>\r\n                <h2 className={!toggle ? \"toggle\" : \"\"}>Popularg Games</h2>\r\n                <Games>\r\n                    {popular.map(game => {\r\n                        return (<Game key={game.id} name={game.name} released={game.released} image={game.background_image} id={game.id} />)\r\n                    })}\r\n                </Games>\r\n                <h2 className={!toggle ? \"toggle\" : \"\"}>New Games</h2>\r\n                <Games>\r\n                    {newGames.map(game => {\r\n                        return (<Game key={game.id} name={game.name} released={game.released} image={game.background_image} id={game.id} />)\r\n                    })}\r\n                </Games>\r\n            </AnimateSharedLayout>\r\n        </GameList>\r\n    );\r\n}\r\n\r\nconst GameList = styled(motion.div)`\r\n  padding: 0 5rem;\r\n  margin-bottom: 5rem ;\r\n  h2{\r\n      padding: 5rem 0;\r\n  }\r\n  .toggle{\r\n  color: white;\r\n  opacity: 0.8;\r\n}\r\n`;\r\nconst Games = styled(motion.div)`\r\n  min-height: 80vh;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));\r\n  grid-column-gap: 3rem;\r\n  grid-row-gap: 5rem;\r\n`;\r\n\r\nexport default Home;","import axios from \"axios\";\r\nimport { searchGameURL, popularGamesURL, upcomingGamesURL, newGamesURL } from \"../api\";\r\n\r\n// Action Creator\r\n\r\nexport const loadGames = () => async (dispatch) => {\r\n    //FETCH AXIOS\r\n    const popularData = await axios.get(popularGamesURL());\r\n    const upcomingData = await axios.get(upcomingGamesURL());\r\n    const newData = await axios.get(newGamesURL());\r\n    dispatch({\r\n        type: \"FETCH_GAMES\",\r\n        payload: {\r\n            popular: popularData.data.results,\r\n            upComing: upcomingData.data.results,\r\n            newGames: newData.data.results\r\n        }\r\n    });\r\n};\r\n\r\nexport const loadSearchedGames = (gameName) => async (dispatch) => {\r\n    //FETCH AXIOS\r\n    const searchedGames = await axios.get(searchGameURL(gameName));\r\n    console.log(searchedGames.data.results)\r\n    dispatch({\r\n        type: \"FETCH_SEARCHED\",\r\n        payload: {\r\n            searched: searchedGames.data.results\r\n        }\r\n    });\r\n\r\n};\r\n\r\n","export default __webpack_public_path__ + \"static/media/logo.9b6b8655.svg\";","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { motion } from 'framer-motion';\r\nimport logo from '../img/logo.svg';\r\nimport { fadeIn } from '../animation';\r\n\r\n//Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loadSearchedGames } from '../actions/gamesAction';\r\n\r\nconst Nav = () => {\r\n    const { searched } = useSelector(state => state.games)\r\n\r\n    const dispatch = useDispatch();\r\n    const [inputGame, setInputGame] = useState(\"\");\r\n\r\n    const changeHandler = (e) => {\r\n        setInputGame(e.target.value);\r\n        //console.log(e.target.value);\r\n    }\r\n    const clickHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(loadSearchedGames(inputGame));\r\n        setInputGame(\"\");\r\n    }\r\n\r\n    const searchHandler = () => {\r\n        dispatch({ type: \"CLEAR_SEARCHED\" });\r\n\r\n    }\r\n    return (\r\n        <StyledNav variants={fadeIn} initial=\"hidden\" animate=\"show\">\r\n            <div className=\"logo\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <Logo onClick={searchHandler}>\r\n                    <img src={logo} alt=\"logo\" />\r\n                    <h1>GameDb</h1>\r\n                </Logo>\r\n            </div>\r\n            <Form className=\"search\">\r\n                <input value={inputGame} type=\"text\" onChange={changeHandler} placeholder=\"Search a Game\" />\r\n                <button onClick={clickHandler}>Search</button>\r\n            </Form>\r\n        </StyledNav>\r\n    )\r\n}\r\n\r\n\r\nconst StyledNav = styled(motion.nav)`\r\n            padding: 3rem 5rem;\r\n            text-align: center;\r\n            input {\r\n                width: 30%;\r\n            font-size: 1.5rem;\r\n            padding: 0.5rem;\r\n            border: none;\r\n            margin-top: 1rem;\r\n            box-shadow: 0px 0px 30px rgba(0, 0, 0, 0.2);\r\n            //outline: none;\r\n            &:focus {outline: none; } \r\n  }\r\n            button {\r\n            font-size: 1.5rem;\r\n            border: none;\r\n            padding: 0.5rem 2rem;\r\n            cursor: pointer;\r\n            background: #ff7676;\r\n            color: white;\r\n  }\r\n\r\n            `;\r\nconst Logo = styled(motion.nav)`\r\n            width: 10%;\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: center;\r\n            align-items: center;\r\n            padding: 1rem;\r\n            cursor: pointer;\r\n            img {\r\n                height: 2rem;\r\n            width: 2rem;\r\n            margin: 1rem;\r\n  }\r\n\r\n            `;\r\n\r\nconst Form = styled(motion.form)`\r\n            input::placeholder{\r\n                color: #ff7676;\r\n            font-size: 1.2rem;\r\n            opacity: 0.5;\r\n            padding: 1rem;\r\n   }\r\n\r\n            `;\r\n\r\n\r\nexport default Nav;","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    *{\r\n        margin: 0;\r\n        padding: 0;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    html{\r\n        &::-webkit-scrollbar{\r\n            width: 0.5rem;\r\n        }\r\n        &::-webkit-scrollbar-thumb{\r\n            background-color: darkgrey;\r\n        }\r\n        &::-webkit-scrollbar-track{\r\n        background: white;\r\n    }\r\n    }\r\n\r\n    body{\r\n        font-family: 'Montserrat', sans-serif;\r\n        width: 100%;\r\n    }\r\n\r\n    h2{\r\n        font-size: 3rem;\r\n        font-family: 'Abril Fatface', cursive;\r\n        font-weight: lighter;\r\n        color: #333;\r\n    }\r\n\r\n    h3{\r\n       font-size: 1.3rem;  \r\n       color: #333;\r\n       padding: 1.5rem 0;\r\n    }\r\n\r\n    p{\r\n        font-size: 1.5rem;\r\n        line-height: 200%;\r\n        color: #696969;\r\n    }\r\n\r\n    a{\r\n        text-decoration: none;\r\n        color: #333;\r\n    }\r\n\r\n    img{\r\n        display: block;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyles;","import React from \"react\";\nimport ThemeSlider from \"./components/ThemeSlider\";\n\n// Components\nimport Home from './pages/Home';\nimport Nav from './components/Nav';\nimport GameDetail from \"./components/GameDetail\";\n\n// Styles\nimport GlobalStyles from \"./components/GlobalStyles\";\n\n// Routes\nimport { Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div>\n      <GlobalStyles />\n      <ThemeSlider />\n      <Nav />\n      <Route path={[\"game/:id\", \"/\"]}>\n        <Home />\n      </Route>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nconst initState = {\r\n    popular: [],\r\n    newGames: [],\r\n    upComing: [],\r\n    searched: []\r\n}\r\n\r\nexport const gamesReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case \"FETCH_GAMES\":\r\n            return { ...state, popular: action.payload.popular, newGames: action.payload.newGames, upComing: action.payload.upComing };\r\n        case \"FETCH_SEARCHED\":\r\n            return { ...state, searched: action.payload.searched };\r\n        case \"CLEAR_SEARCHED\":\r\n            return { ...state, searched: [] };\r\n        default:\r\n            return { ...state };\r\n\r\n    }\r\n}","\r\nconst initialState = { game: {}, screens: {}, isLoading: true };\r\n\r\nconst detailReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"GET_DETAILS\":\r\n            return { ...state, game: action.payload.game, screens: action.payload.screens, isLoading: false };\r\n        case \"LOADING_DETAILS\":\r\n            return { ...state, isLoading: true };\r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n\r\nexport default detailReducer;","import { combineReducers } from \"redux\";\r\nimport { gamesReducer } from \"./gamesReducer\";\r\nimport detailReducer from \"./detailReducer\";\r\nimport { themeReducer } from \"./themeReducer\";\r\n\r\n// const initial = {\r\n//     isLogged: false\r\n// }\r\n// const userReducer = (state = initial, action) => {\r\n//     return { ...state }\r\n// }\r\n\r\nconst rootReducer = combineReducers({\r\n    games: gamesReducer,\r\n    details: detailReducer,\r\n    theme: themeReducer\r\n})\r\n\r\nexport default rootReducer;","\r\n\r\nexport const themeReducer = (toggle = true, action) => {\r\n    switch (action.type) {\r\n        case \"FETCH_TOGGLE\":\r\n            return !toggle;\r\n        default:\r\n            return toggle;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n//REDUX SETUP\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './reducers';\nimport { Provider } from \"react-redux\";\nimport thunk from 'redux-thunk';\n\nconst composeEnhancer = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst store = createStore(rootReducer, composeEnhancer(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}