{"version":3,"sources":["api.js","animation.js","util.js","components/Game.js","actions/detailAction.js","img/playstation.svg","img/steam.svg","img/xbox.svg","img/nintendo.svg","img/apple.svg","img/gamepad.svg","img/xboxx.svg","img/apple5.svg","img/empty.svg","img/full.svg","components/GameDetail.js","pages/Home.js","actions/gamesAction.js","img/logo.svg","components/Nav.js","components/GlobalStyles.js","App.js","reportWebVitals.js","reducers/gamesReducer.js","reducers/detailReducer.js","reducers/index.js","index.js"],"names":["baseUrl","currentYear","Date","getFullYear","currentMonth","month","getMonth","getCurrentMonth","currentDay","day","getDay","getCurrentDay","currentDate","lastYear","nextYear","popularGames","process","upcomingGames","newgGames","gameScreenshotURL","gameId","searchGameURL","gameName","fadeIn","hidden","opacity","show","transition","duration","exit","popup","scale","smallImage","imagePath","size","match","replace","StyledGame","styled","motion","div","Game","name","released","image","id","dispatch","useDispatch","variants","initial","animate","layoutId","toString","onClick","document","body","style","overflow","a","type","axios","get","detailData","screens","payload","game","data","loadDetails","to","h3","img","src","alt","CardShadow","Detail","Stats","Info","Platforms","Media","Description","GameDetail","pathId","history","useHistory","useSelector","state","details","isLoading","stars","rating","Math","floor","i","push","full","empty","getStars","className","e","element","target","console","log","classList","contains","map","star","display","width","height","margin","platforms","platform","xbox","steam","playstation","xboxx","playstation5","apple","nintendo","gamepad","background_image","description_raw","results","screen","GameList","Games","Home","useEffect","popularData","upcomingData","newData","popular","upComing","newGames","games","searched","useLocation","pathname","split","AnimateSharedLayout","AnimatePresence","length","StyledNav","nav","Logo","Form","form","Nav","useState","inputGame","setInputGame","logo","value","onChange","placeholder","preventDefault","searchedGames","GlobalStyles","createGlobalStyle","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","initialState","detailReducer","action","rootReducer","combineReducers","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.462d0a69.chunk.js","sourcesContent":["// Base URL\r\n\r\nconst baseUrl = 'https://api.rawg.io/api/';\r\n\r\n// Getting the dates\r\nconst getCurrentMonth = () => {\r\n    const month = new Date().getMonth() + 1;\r\n    if (month < 10) return `0${month}`;\r\n    return month;\r\n}\r\nconst getCurrentDay = () => {\r\n    const day = new Date().getDay();\r\n    if (day < 10) return `0${day}`;\r\n    return day;\r\n}\r\n\r\nconst currentYear = new Date().getFullYear();\r\nconst currentMonth = getCurrentMonth();\r\nconst currentDay = getCurrentDay();\r\nconst currentDate = `${currentYear}-${currentMonth}-${currentDay}`;\r\nconst lastYear = `${currentYear - 1}-${currentMonth}-${currentDay}`;\r\nconst nextYear = `${currentYear + 1}-${currentMonth}-${currentDay}`;\r\n\r\n// Popular Gmaes\r\nconst popularGames = `games?key=${process.env.REACT_APP_RAWG_KEY}&dates=${lastYear},${currentDate}&ordering=-rating&page_size=12`;\r\nconst upcomingGames = `games?key=${process.env.REACT_APP_RAWG_KEY}&dates=${currentDate},${nextYear}&ordering=-added&page_size=12`;\r\nconst newgGames = `games?key=${process.env.REACT_APP_RAWG_KEY}&dates=${lastYear},${currentDate}&ordering=-released&page_size=12`;\r\n\r\n//https://api.rawg.io/api/games?key=da9bebdac31e429eaccfd7568a0db0d2\r\n\r\nexport const popularGamesURL = () => `${baseUrl}${popularGames}`;\r\nexport const upcomingGamesURL = () => `${baseUrl}${upcomingGames}`;\r\nexport const newGamesURL = () => `${baseUrl}${newgGames}`;\r\n\r\n// Game details\r\nexport const gameDetailsURL = (gameId) => `${baseUrl}games/${gameId}?key=${process.env.REACT_APP_RAWG_KEY}`;\r\n\r\n//ScreenShots\r\nexport const gameScreenshotURL = (gameId) => `${baseUrl}games/${gameId}/screenshots?key=${process.env.REACT_APP_RAWG_KEY}`;\r\n\r\n// Searched Game:\r\nexport const searchGameURL = (gameName) => `${baseUrl}games?key=${process.env.REACT_APP_RAWG_KEY}&search=${gameName}&page_size=9`;\r\n\r\n//console.log(searchGameURL())","export const fadeIn = {\r\n    hidden: {\r\n        opacity: 0,\r\n    },\r\n    show: {\r\n        opacity: 1,\r\n        transition: {\r\n            duration: 0.75,\r\n        },\r\n        exit: {\r\n            opacity: 0,\r\n            transition: { duration: 0.75 },\r\n        },\r\n    },\r\n};\r\n\r\nexport const popup = {\r\n    hidden: {\r\n        opacity: 0,\r\n        scale: 0.5,\r\n    },\r\n    show: {\r\n        opacity: 1,\r\n        scale: 1,\r\n        transition: {\r\n            duration: 0.75,\r\n        },\r\n        exit: {\r\n            opacity: 0,\r\n            transition: { duration: 0.75 },\r\n        },\r\n    },\r\n};","\r\n\r\nexport const smallImage = (imagePath, size) => {\r\n    const image = imagePath.match(/media\\/screenshots/) ? imagePath.replace(\"media/screenshots\", `media/resize/${size}/-/screenshots`) :\r\n        imagePath.replace(\"/media/games\", `/media/resize/${size}/-/games`);\r\n    return image || [];\r\n}","import React from 'react';\r\n// styling and animation:\r\nimport styled from 'styled-components';\r\nimport { motion } from \"framer-motion\";\r\nimport { Link } from 'react-router-dom';\r\nimport { popup } from '../animation';\r\n// Redux\r\nimport { useDispatch } from 'react-redux';\r\nimport { loadDetails } from '../actions/detailAction';\r\nimport { smallImage } from '../util';\r\n\r\nconst Game = ({ name, released, image, id }) => {\r\n    //const { isLoading } = useSelector(state => state.details);\r\n    //load Details\r\n    const dispatch = useDispatch();\r\n    const loadDetailHandler = () => {\r\n        document.body.style.overflow = \"hidden\";\r\n        dispatch(loadDetails(id));\r\n    }\r\n    return (\r\n\r\n        <StyledGame variants={popup} initial=\"hidden\" animate=\"show\" layoutId={id.toString()} onClick={loadDetailHandler}>\r\n            <Link to={`/game/${id}`}>\r\n                <motion.h3 layoutId={`name ${id.toString()}`}>{name}</motion.h3>\r\n                <p>{released}</p>\r\n                {image && <motion.img layoutId={`image ${id.toString()}`} src={smallImage(image, 640)} alt={name} />}\r\n            </Link>\r\n        </StyledGame>\r\n\r\n    )\r\n}\r\n\r\nconst StyledGame = styled(motion.div)`\r\nmin-height: 30vh;\r\nbox-shadow: 0px 5px 30px rgba(0,0,0,0.2);\r\ntext-align: center;\r\nborder-radius: 1rem;\r\noverflow: hidden;\r\ncursor: pointer;\r\nimg{\r\n    width: 100%;\r\n    height: 40vh;\r\n    object-fit: cover;\r\n}\r\n`;\r\n\r\nexport default Game;","import axios from 'axios';\r\nimport { gameDetailsURL, gameScreenshotURL } from \"../api\";\r\n\r\nexport const loadDetails = (id) => async (dispatch) => {\r\n\r\n    dispatch({\r\n        type: \"LOADING_DETAILS\"\r\n    });\r\n    const detailData = await axios.get(gameDetailsURL(id));\r\n    const screens = await axios.get(gameScreenshotURL(id));\r\n    //console.log(screens.data.results);\r\n\r\n    dispatch({\r\n        type: \"GET_DETAILS\",\r\n        payload: {\r\n            game: detailData.data,\r\n            screens: screens.data\r\n        }\r\n    });\r\n}","export default __webpack_public_path__ + \"static/media/playstation.18cc4b9c.svg\";","export default __webpack_public_path__ + \"static/media/steam.d7b8819f.svg\";","export default __webpack_public_path__ + \"static/media/xbox.3e7db735.svg\";","export default __webpack_public_path__ + \"static/media/nintendo.f579be04.svg\";","export default __webpack_public_path__ + \"static/media/apple.5757c37e.svg\";","export default __webpack_public_path__ + \"static/media/gamepad.c9269ef5.svg\";","export default __webpack_public_path__ + \"static/media/xboxx.e5244a13.svg\";","export default __webpack_public_path__ + \"static/media/apple5.94682cd2.svg\";","export default __webpack_public_path__ + \"static/media/empty.f15ae9c7.svg\";","export default __webpack_public_path__ + \"static/media/full.790f558e.svg\";","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { smallImage } from '../util';\r\n// styling and animation:\r\nimport styled from 'styled-components';\r\nimport { motion } from \"framer-motion\";\r\n//Redux\r\nimport { useSelector } from 'react-redux';\r\n//Platform Images\r\nimport playstation from \"../img/playstation.svg\";\r\nimport steam from \"../img/steam.svg\";\r\nimport xbox from \"../img/xbox.svg\";\r\nimport nintendo from \"../img/nintendo.svg\";\r\nimport apple from \"../img/apple.svg\";\r\nimport gamepad from \"../img/gamepad.svg\";\r\nimport xboxx from \"../img/xboxx.svg\";\r\nimport playstation5 from \"../img/apple5.svg\";\r\n//Star Images\r\nimport empty from \"../img/empty.svg\";\r\nimport full from \"../img/full.svg\";\r\n\r\n\r\n\r\nconst GameDetail = ({ pathId }) => {\r\n    const history = useHistory();\r\n    const exitDetailsHandler = (e) => {\r\n        const element = e.target;\r\n        console.log(\"Handler Clicked!\")\r\n        if (element.classList.contains(\"shadow\")) {\r\n            document.body.style.overflow = \"auto\";\r\n            history.push(\"/\");\r\n        }\r\n    }\r\n    //Get platform Images\r\n    const getPlatfromIcon = (name) => {\r\n        if (name === \"Xbox One\") return xbox;\r\n        if (name === \"PC\") return steam;\r\n        if (name === \"PlayStation 4\") return playstation;\r\n        if (name === \"Xbox Series S/X\") return xboxx;\r\n        if (name === \"PlayStation 5\") return playstation5;\r\n        if (name === \"iOS\") return apple;\r\n        if (name === \"Nintendo Switch\") return nintendo;\r\n        return gamepad;\r\n    }\r\n\r\n    // Get stars \r\n    const getStars = (rating) => {\r\n        let stars = []\r\n        rating = Math.floor(rating);\r\n        for (let i = 1; i <= 5; i++) {\r\n            if (i <= rating) {\r\n                stars.push(full);\r\n            } else {\r\n                stars.push(empty)\r\n            }\r\n        }\r\n        return stars;\r\n    }\r\n\r\n    //data\r\n    const { game, screens, isLoading } = useSelector((state) => state.details);\r\n    let stars = getStars(game.rating);\r\n    return (\r\n        <>\r\n            {!isLoading && (\r\n                <CardShadow className=\"shadow\" onClick={exitDetailsHandler}>\r\n                    <Detail layoutId={pathId}>\r\n                        <Stats>\r\n                            <div className=\"rating\">\r\n                                <motion.h3 layoutId={`name ${pathId}`}>{game.name}</motion.h3>\r\n                                <p>Rating: {game.rating}</p>\r\n                                {stars.map((star, i) => {\r\n                                    return <img type=\"image/svg+xml\" src={star} style={{ display: \"inline\", width: \"30px\", height: \"30px\", margin: 0 }} key={i} alt={star} />\r\n                                })}\r\n                            </div>\r\n                            <Info>\r\n                                <h3>Platforms</h3>\r\n                                <Platforms>\r\n                                    {game.platforms.map(data => {\r\n                                        //return <object type=\"image/svg+xml\" data={getPlatfromIcon(data.platform.name)}>hjhjh</object>\r\n                                        //return <svg width=\"100\" height=\"100\" xmlns={xbox}></svg>\r\n                                        return <img type=\"image/svg+xml\" src={getPlatfromIcon(data.platform.name)} style={{ width: \"50px\", height: \"50px\" }} key={data.platform.id} alt={data.platform.name} />\r\n                                    })}\r\n                                </Platforms>\r\n                            </Info>\r\n                        </Stats>\r\n                        <Media>\r\n                            <motion.img layoutId={`image ${pathId}`} src={smallImage(game.background_image, 640)} alt=\"{background_image}\" />\r\n                        </Media>\r\n                        <Description>\r\n                            <p>{game.description_raw}</p>\r\n                        </Description>\r\n                        <div className=\"gallery\">\r\n                            {screens.results.map(screen => {\r\n                                return <img key={screen.id} src={smallImage(screen.image, 640)} alt=\"game\" />\r\n                            })}\r\n                        </div>\r\n                    </Detail>\r\n                </CardShadow>\r\n            )}\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst CardShadow = styled(motion.div)`\r\n    width: 100%;\r\n    min-height: 100vh;\r\n    overflow-y:scroll;\r\n    background: rgba(0,0,0,0.5);\r\n    position: fixed;\r\n    top: 0;\r\n    left : 0;\r\n    z-index: 5;\r\n    &::-webkit-scrollbar{\r\n        width: 0.5rem;\r\n    }\r\n    &::-webkit-scrollbar-thumb{\r\n        background-color: #ff7676;\r\n    }\r\n    &::-webkit-scrollbar-track{\r\n        background: white;\r\n    }\r\n`;\r\n\r\nconst Detail = styled(motion.div)`\r\n    width: 80%;\r\n    border-radius: 1rem;\r\n    padding: 2rem 5rem;\r\n    background: white;\r\n    position: absolute;\r\n    left: 10%;\r\n    color: black;\r\n    //z-index: 10;\r\n    img{\r\n        width: 100%;\r\n    }\r\n\r\n`;\r\n\r\nconst Stats = styled(motion.div)`\r\n   display: flex;\r\n   align-items: center;\r\n   justify-content: space-between;\r\n\r\n`;\r\nconst Info = styled(motion.div)`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n`;\r\nconst Platforms = styled(motion.div)`\r\n   display: flex;\r\n   justify-content: space-between;\r\n   img{\r\n       margin-left: 3rem;\r\n   }\r\n`;\r\nconst Media = styled(motion.div)`\r\n  margin-top: 5rem;\r\n   justify-content: space-between;\r\n   img{\r\n       width: 100%;\r\n       //height: 60vh;\r\n      // object-fit: cover;\r\n   }\r\n`;\r\nconst Description = styled(motion.div)`\r\n    margin: 5rem 0;\r\n`;\r\n\r\n\r\nexport default GameDetail;","import React, { useEffect } from 'react';\r\nimport { useLocation } from 'react-router';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loadGames } from '../actions/gamesAction';\r\n// Components\r\nimport Game from '../components/Game';\r\nimport GameDetail from '../components/GameDetail';\r\n// styling and animation:\r\nimport styled from 'styled-components';\r\nimport { motion, AnimatePresence, AnimateSharedLayout } from \"framer-motion\";\r\nimport { fadeIn } from '../animation';\r\n\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(loadGames())\r\n    }, [dispatch]);\r\n    const { popular, newGames, upComing, searched } = useSelector(state => state.games);\r\n    const location = useLocation();\r\n    const pathId = location.pathname.split('/')[2];\r\n    //console.log(pathId);\r\n    return (\r\n        <GameList variants={fadeIn} initial=\"hidden\" animate=\"show\">\r\n            <AnimateSharedLayout type=\"crossfade\">\r\n                <AnimatePresence>\r\n                    {pathId && <GameDetail pathId={pathId} />}\r\n                </AnimatePresence>\r\n                {searched.length ?\r\n                    <>\r\n                        <h2>Searched Games</h2>\r\n                        <Games>\r\n                            {searched.map(game => {\r\n                                return (<Game key={game.id} name={game.name} released={game.released} image={game.background_image} id={game.id} />)\r\n                            })}\r\n                        </Games>\r\n                    </>\r\n                    : \"\"}\r\n                <h2>Upcoming Games</h2>\r\n                <Games>\r\n                    {upComing.map(game => {\r\n                        return (<Game key={game.id} name={game.name} released={game.released} image={game.background_image} id={game.id} />)\r\n                    })}\r\n                </Games>\r\n                <h2>Popularg Games</h2>\r\n                <Games>\r\n                    {popular.map(game => {\r\n                        return (<Game key={game.id} name={game.name} released={game.released} image={game.background_image} id={game.id} />)\r\n                    })}\r\n                </Games>\r\n                <h2>New Games</h2>\r\n                <Games>\r\n                    {newGames.map(game => {\r\n                        return (<Game key={game.id} name={game.name} released={game.released} image={game.background_image} id={game.id} />)\r\n                    })}\r\n                </Games>\r\n            </AnimateSharedLayout>\r\n        </GameList>\r\n    );\r\n}\r\n\r\nconst GameList = styled(motion.div)`\r\n  padding: 0 5rem;\r\n  margin-bottom: 5rem ;\r\n  h2{\r\n      padding: 5rem 0;\r\n  }\r\n`;\r\nconst Games = styled(motion.div)`\r\n  min-height: 80vh;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));\r\n  grid-column-gap: 3rem;\r\n  grid-row-gap: 5rem;\r\n`;\r\n\r\nexport default Home;","import axios from \"axios\";\r\nimport { searchGameURL, popularGamesURL, upcomingGamesURL, newGamesURL } from \"../api\";\r\n\r\n// Action Creator\r\n\r\nexport const loadGames = () => async (dispatch) => {\r\n    //FETCH AXIOS\r\n    const popularData = await axios.get(popularGamesURL());\r\n    const upcomingData = await axios.get(upcomingGamesURL());\r\n    const newData = await axios.get(newGamesURL());\r\n    dispatch({\r\n        type: \"FETCH_GAMES\",\r\n        payload: {\r\n            popular: popularData.data.results,\r\n            upComing: upcomingData.data.results,\r\n            newGames: newData.data.results\r\n        }\r\n    });\r\n};\r\n\r\nexport const loadSearchedGames = (gameName) => async (dispatch) => {\r\n    //FETCH AXIOS\r\n    const searchedGames = await axios.get(searchGameURL(gameName));\r\n    console.log(searchedGames.data.results)\r\n    dispatch({\r\n        type: \"FETCH_SEARCHED\",\r\n        payload: {\r\n            searched: searchedGames.data.results\r\n        }\r\n    });\r\n\r\n};\r\n\r\n","export default __webpack_public_path__ + \"static/media/logo.9b6b8655.svg\";","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { motion } from 'framer-motion';\r\nimport logo from '../img/logo.svg';\r\nimport { fadeIn } from '../animation';\r\n\r\n//Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loadSearchedGames } from '../actions/gamesAction';\r\n\r\nconst Nav = () => {\r\n    const { searched } = useSelector(state => state.games)\r\n\r\n    const dispatch = useDispatch();\r\n    const [inputGame, setInputGame] = useState(\"\");\r\n\r\n    const changeHandler = (e) => {\r\n        setInputGame(e.target.value);\r\n        //console.log(e.target.value);\r\n    }\r\n    const clickHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(loadSearchedGames(inputGame));\r\n        setInputGame(\"\");\r\n    }\r\n\r\n    const searchHandler = () => {\r\n        dispatch({ type: \"CLEAR_SEARCHED\" });\r\n\r\n    }\r\n    return (\r\n        <StyledNav variants={fadeIn} initial=\"hidden\" animate=\"show\">\r\n            <Logo onClick={searchHandler}>\r\n                <img src={logo} alt=\"logo\" />\r\n                <h1>GameDb</h1>\r\n            </Logo>\r\n            <Form className=\"search\">\r\n                <input value={inputGame} type=\"text\" onChange={changeHandler} placeholder=\"Search a Game\" />\r\n                <button onClick={clickHandler}>Search</button>\r\n            </Form>\r\n        </StyledNav>\r\n    )\r\n}\r\n\r\n\r\nconst StyledNav = styled(motion.nav)`\r\n  padding: 3rem 5rem;\r\n  text-align: center;\r\n  input {\r\n    width: 30%;\r\n    font-size: 1.5rem;\r\n    padding: 0.5rem;\r\n    border: none;\r\n    margin-top: 1rem;\r\n    box-shadow: 0px 0px 30px rgba(0, 0, 0, 0.2);\r\n    //outline: none;\r\n      &:focus { outline: none; } \r\n  }\r\n  button {\r\n    font-size: 1.5rem;\r\n    border: none;\r\n    padding: 0.5rem 2rem;\r\n    cursor: pointer;\r\n    background: #ff7676;\r\n    color: white;\r\n  }\r\n\r\n`;\r\nconst Logo = styled(motion.nav)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 1rem;\r\n  cursor: pointer;\r\n  img {\r\n    height: 2rem;\r\n    width: 2rem;\r\n    margin: 1rem;\r\n  }     \r\n\r\n`;\r\n\r\nconst Form = styled(motion.form)`\r\n   input::placeholder{\r\n      color: #ff7676;\r\n      font-size: 1.2rem;\r\n      opacity: 0.5;\r\n     padding: 1rem;\r\n   }\r\n\r\n`;\r\n\r\n\r\nexport default Nav;","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    *{\r\n        margin: 0;\r\n        padding: 0;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    html{\r\n        &::-webkit-scrollbar{\r\n            width: 0.5rem;\r\n        }\r\n        &::-webkit-scrollbar-thumb{\r\n            background-color: darkgrey;\r\n        }\r\n        &::-webkit-scrollbar-track{\r\n        background: white;\r\n    }\r\n    }\r\n\r\n    body{\r\n        font-family: 'Montserrat', sans-serif;\r\n        width: 100%;\r\n    }\r\n\r\n    h2{\r\n        font-size: 3rem;\r\n        font-family: 'Abril Fatface', cursive;\r\n        font-weight: lighter;\r\n        color: #333;\r\n    }\r\n\r\n    h3{\r\n       font-size: 1.3rem;  \r\n       color: #333;\r\n       padding: 1.5rem 0;\r\n    }\r\n\r\n    p{\r\n        font-size: 1.5rem;\r\n        line-height: 200%;\r\n        color: #696969;\r\n    }\r\n\r\n    a{\r\n        text-decoration: none;\r\n        color: #333;\r\n    }\r\n\r\n    img{\r\n        display: block;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyles;","import React from \"react\";\n\n// Components\nimport Home from './pages/Home';\nimport Nav from './components/Nav';\nimport GameDetail from \"./components/GameDetail\";\n\n// Styles\nimport GlobalStyles from \"./components/GlobalStyles\";\n\n// Routes\nimport { Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div>\n      <GlobalStyles />\n      <Nav />\n      <Route path={[\"game/:id\", \"/\"]}>\n        <Home />\n      </Route>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nconst initState = {\r\n    popular: [],\r\n    newGames: [],\r\n    upComing: [],\r\n    searched: []\r\n}\r\n\r\nexport const gamesReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case \"FETCH_GAMES\":\r\n            return { ...state, popular: action.payload.popular, newGames: action.payload.newGames, upComing: action.payload.upComing };\r\n        case \"FETCH_SEARCHED\":\r\n            return { ...state, searched: action.payload.searched };\r\n        case \"CLEAR_SEARCHED\":\r\n            return { ...state, searched: [] };\r\n        default:\r\n            return { ...state };\r\n\r\n    }\r\n}","\r\nconst initialState = { game: {}, screens: {}, isLoading: true };\r\n\r\nconst detailReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"GET_DETAILS\":\r\n            return { ...state, game: action.payload.game, screens: action.payload.screens, isLoading: false };\r\n        case \"LOADING_DETAILS\":\r\n            return { ...state, isLoading: true };\r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n\r\nexport default detailReducer;","import { combineReducers } from \"redux\";\r\nimport { gamesReducer } from \"./gamesReducer\";\r\nimport detailReducer from \"./detailReducer\";\r\n\r\n// const initial = {\r\n//     isLogged: false\r\n// }\r\n// const userReducer = (state = initial, action) => {\r\n//     return { ...state }\r\n// }\r\n\r\nconst rootReducer = combineReducers({\r\n    games: gamesReducer,\r\n    details: detailReducer\r\n})\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n//REDUX SETUP\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './reducers';\nimport { Provider } from \"react-redux\";\nimport thunk from 'redux-thunk';\n\nconst composeEnhancer = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst store = createStore(rootReducer, composeEnhancer(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}